#!/usr/bin/bash
_preferred_monitor=${PREFERRED_DISPLAY:-DP-1}
_session_type=""
# TODO: Test in other desktop environments. Currently adjusted for sway
_session_type=$(loginctl 2>/dev/null show-session "$(awk '/tty/ {print $1}' <(loginctl list-sessions | grep "$USER" | grep "active" -w))" -p Type | awk -F= '{print $2}')
# session_from_systemd=$(loginctl 2>/dev/null show-session "$(awk '/tty/ {print $1}' <(loginctl list-sessions | grep "$USER" | grep "active" -w))" -p Type)
if [[ -z $_session_type ]]; then
	echo "Falling back to environment for session type detection"
	environment=$(env)
	if grep -qc "WAYLAND_DISPLAY" <<<"$environment"; then
		_session_type="wayland"
	elif grep -qc "DISPLAY" <<<"$environment"; then
		_session_type="x11"
	fi
	unset environment
fi
_primary=""
if [[ $XDG_CURRENT_DESKTOP == "KDE" ]]; then
	echo "KDE Mode"
	outputs=$(kscreen-doctor -o | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g")
	# transform output into lines, remove disabled outputs, and sort by priority, then return the output to prefer by priority
	p=$(echo "$outputs" | grep -v "Modes" | grep Output -A4 | xargs | sed 's/Output\:/\n/g' | grep -v disabled | awk '{print $6 " " $2}' | sed '/^\s*$/d' | sort | head -n1 | cut -d ' ' -f 2)
	echo "p: $p"
	_primary=$(echo "$outputs" | /bin/grep -B3 -A0 "$p" | grep Output\: -B0 -A0 | cut -d ' ' -f 3)
	unset p outputs
else
	echo "non-KDE Mode"
	# is our preferred display enabled?
	# TODO: hyprland, wayland, x11
	# NOTE: wlr-randr has no concept of primary monitor
	# TODO: verify output name format with NVIDIA and Intel again
	# TODO: Make sure we don't disable the only present display
	if [[ $(wlr-randr | grep -B5 'Enabled: yes' | grep "$_preferred_monitor" -c) -gt 0 ]]; then
		wlr-randr --output HDMI-A-1 --off
		_primary=$_preferred_monitor
	else
		# fall back to HDMI-A-1
		if wlr-randr | grep 'HDMI-A-1' -A5 | grep 'Enabled: no'; then
			wlr-randr --output HDMI-A-1 --on
		fi
		_primary=HDMI-A-1
	fi
	# echo "unsupported yet"
	# notify-send "Unsupported environment" "Resolution not adjusted"
	# return 0
fi
echo "Primary output: $_primary"
_height=${SUNSHINE_CLIENT_HEIGHT:-720}
_width=${SUNSHINE_CLIENT_WIDTH:-1280}
_refresh=${SUNSHINE_CLIENT_FPS:-60}
if [[ -n $_primary ]]; then
	if [[ $1 == "do" ]]; then
		# TODO: X11 support using xrandr
		if [[ $XDG_CURRENT_DESKTOP == "KDE" ]]; then
			# sh -c \"if pgrep plasmashell; then output=`~/scripts/get_primary_monitor`; kscreen-doctor output.${output}.vrrpolicy.never; kscreen-doctor.output.${output}.mode.2560x1440@120; fi\""}]
			# TODO: revisit once KDE has fully native support without Xwayland
			kscreen-doctor output."${_primary}".mode."${_width}"x"${_height}"@"${_refresh}"
			kscreen-doctor output."${_primary}".vrrpolicy.never
		else
			wlr-randr --output "${_primary}" --mode "${_width}"x"${_height}"@"${_refresh}" --adaptive-sync disabled
		fi
	elif [[ $1 == "undo" ]]; then
		# TODO: make disabling HDMI-A-1 optional
		if [[ $XDG_CURRENT_DESKTOP == "KDE" ]]; then
			# TODO: Find preferred mode. it is available through command completion
			kscreen-doctor output."${_primary}".mode.2560x1440@120
			kscreen-doctor output."${_primary}".vrrpolicy.enabled
			kscreen-doctor output.HDMI-A-1.disable
		else
			wlr-randr --output "${_primary}" --mode 2560x1440 --adaptive-sync enabled
			if [[ $_primary != "HDMI-A-1" ]]; then
				wlr-randr --output HDMI-A-1 --off
			fi
		fi
	fi
fi
echo "reached the end"
echo "======================================================"
unset _preferred_monitor _session_type _primary _height _width_refresh

# vim: ft=bash
